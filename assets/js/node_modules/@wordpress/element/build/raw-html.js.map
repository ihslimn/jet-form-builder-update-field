{"version":3,"sources":["@wordpress/element/src/raw-html.js"],"names":["RawHTML","children","props","dangerouslySetInnerHTML","__html"],"mappings":";;;;;;;AAGA;;AAHA;AACA;AACA;AAGA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,OAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAlB,EAA2C;AACzD;AACA;AACA,SAAO,0BAAe,KAAf,EAAsB;AAC5BC,IAAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEH;AAAV,KADG;AAE5B,OAAGC;AAFyB,GAAtB,CAAP;AAIA","sourcesContent":["/**\n * Internal dependencies\n */\nimport { createElement } from './react';\n\n// Disable reason: JSDoc linter doesn't seem to parse the union (`&`) correctly.\n/** @typedef {{children: string} & import('react').ComponentPropsWithoutRef<'div'>} RawHTMLProps */\n\n/**\n * Component used as equivalent of Fragment with unescaped HTML, in cases where\n * it is desirable to render dangerous HTML without needing a wrapper element.\n * To preserve additional props, a `div` wrapper _will_ be created if any props\n * aside from `children` are passed.\n *\n * @param {RawHTMLProps} props Children should be a string of HTML. Other props\n *                             will be passed through to div wrapper.\n *\n * @return {JSX.Element} Dangerously-rendering component.\n */\nexport default function RawHTML( { children, ...props } ) {\n\t// The DIV wrapper will be stripped by serializer, unless there are\n\t// non-children props present.\n\treturn createElement( 'div', {\n\t\tdangerouslySetInnerHTML: { __html: children },\n\t\t...props,\n\t} );\n}\n"]}