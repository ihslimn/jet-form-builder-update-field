(()=>{"use strict";var e="jfb_update_fields_options_enabled",t="jfb_update_fields_value_enabled",n="jfb_update_fields_update_on_button",r="jfb_update_fields_button_name",l="jfb_update_fields_field_to_listen",o="jfb_update_fields_callback",a="jfb_update_fields_listen_all",i={"jet-forms/select-field":"options","jet-forms/radio-field":"options","jet-forms/checkbox-field":"options","jet-forms/text-field":"value","jet-forms/number-field":"value","jet-forms/textarea-field":"value","jet-forms/hidden-field":"value","jet-forms/submit-field":"update_other"};function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){f(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function f(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==u(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===u(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function s(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==m(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===m(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var d=wp.hooks.addFilter,b=wp.compose.createHigherOrderComponent,y=wp.blockEditor.InspectorControls,w=wp.components,v=w.TextControl,h=w.ToggleControl,_=w.Panel,j=w.PanelRow,g=w.PanelBody,E=b((function(u){return function(c){var p=c.name,f=i[p]||!1;if(!f)return wp.element.createElement(u,c);var m=c.attributes,d=c.setAttributes,b=c.isSelected;return wp.element.createElement(React.Fragment,null,wp.element.createElement(u,c),b&&wp.element.createElement(y,null,wp.element.createElement(_,null,("update_other"!==f||"update"===(null==m?void 0:m.action_type))&&wp.element.createElement(g,{title:"Field updater",initialOpen:!1},"update_other"===f&&"update"===(null==m?void 0:m.action_type)&&wp.element.createElement(j,null,wp.element.createElement(v,{label:"Button name",help:"Latin lowercase letters, underscore, dash, numbers.",value:m[r],onChange:function(e){d(s({},r,e))}})),"options"===f&&wp.element.createElement(j,null,wp.element.createElement(h,{label:"Enable options updater",help:m[e]?"Enabled.":"Disabled.",checked:m[e],onChange:function(){d(s({},e,!m[e]))}})),"value"===f&&wp.element.createElement(j,null,wp.element.createElement(h,{label:"Enable value updater",help:m[t]?"Enabled.":"Disabled.",checked:m[t],onChange:function(){d(s({},t,!m[t]))}})),(m[e]||m[t])&&wp.element.createElement(j,null,wp.element.createElement(h,{label:"Update on action button",help:m[n]?"Yes.":"No.",checked:m[n],onChange:function(){d(s({},n,!m[n]))}})),(m[e]||m[t])&&m[n]&&wp.element.createElement(j,null,wp.element.createElement(v,{label:"Button name",help:"",value:m[r],onChange:function(e){d(s({},r,e))}})),(m[e]||m[t])&&!m[n]&&wp.element.createElement(j,null,wp.element.createElement(v,{label:"Fields to listen",help:"comma-separated",value:m[l],onChange:function(e){d(s({},l,e))}})),(m[e]||m[t])&&!m[n]&&wp.element.createElement(j,null,wp.element.createElement(h,{label:"Listen all",help:m[a]?"Yes.":"No.",checked:m[a],onChange:function(){d(s({},a,!m[a]))}})),"value"===f&&m[t]&&wp.element.createElement(j,null,wp.element.createElement(v,{label:"Callback or query parameters",value:m[o],help:"Callback which parameters are $field_name (this field name), $form_id (this form ID), $form_fields (array of all form fields). Alternatively JetEngine query_id|property to get a specified propery from the first object from query.",onChange:function(e){d(s({},o,e))}}))))))}}),"addControls");d("editor.BlockEdit","jet-form-builder/update-fields",E),wp.blocks.registerBlockType,wp.components.TextControl,wp.element.createElement;var k=wp.blocks.registerBlockVariation,O={name:"update",title:"Update Field",isActive:["action_type"],description:"Update fields that are dependent on this button",icon:"update-alt",scope:["block","inserter","transform"],attributes:{action_type:"update"}};(0,wp.hooks.addFilter)("blocks.registerBlockType","jfb-update-field/block-attributes",(function(u,c){var m;return i[c]?(u.attributes=p(p({},u.attributes),{},(f(m={},e,{type:"boolean",default:!1}),f(m,t,{type:"boolean",default:!1}),f(m,l,{type:"string",default:""}),f(m,a,{type:"boolean",default:!1}),f(m,o,{type:"string",default:""}),f(m,n,{type:"boolean",default:!1}),f(m,r,{type:"string",default:""}),m)),u):u})),document.addEventListener("jet-form-builder-initialized",(function(){k("jet-forms/submit-field",O)}))})();